name: Deploy Laravel to backadm-dmc

on:
  push:
    branches:
      - stagging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH for deployment
      - name: Set up SSH for deployment
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_PRIVATE_KEY_VPS }}

      # Step 3: Deploy Laravel
      - name: Deploy Laravel
        run: |
          ssh -p 22 -o StrictHostKeyChecking=no ${{ secrets.STAGING_SERVER_USERNAME }}@${{ secrets.STAGING_SERVER_IP }} << 'EOF'
            
            # Navigate to project directory
            cd /home/dmcdemo/public_html/backadm-dmc

            # Pull latest code from the stagging branch
            git pull origin stagging

            # Ensure correct ownership
            chown -R dmcdemo:dmcdemo /home/dmcdemo/public_html/backadm-dmc

            # Install PHP dependencies
            # composer install --no-dev --optimize-autoloader

            # Ensure correct folder permissions
            find /home/dmcdemo/public_html/backadm-dmc -type f -exec chmod 644 {} \; # Files
            find /home/dmcdemo/public_html/backadm-dmc -type d -exec chmod 755 {} \; # Directories
            chmod -R 777 /home/dmcdemo/public_html/backadm-dmc/storage
            chmod -R 777 /home/dmcdemo/public_html/backadm-dmc/cache
            chmod -R 777 /home/dmcdemo/public_html/backadm-dmc/bootstrap/cache

            # Create symlink for storage
            # php artisan storage:link

            # Run Laravel optimization commands
            # php artisan config:clear
            # php artisan config:cache
            # php artisan route:cache
            # php artisan view:cache

            # Run database migrations
            # php artisan migrate --force

          EOF
